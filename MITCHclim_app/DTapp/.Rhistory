install.packages("fontawesome")
library(fontawesome)
library(shiny)
library(shinythemes)
library(shinyBS)
library(shinyFeedback)
library(popbio)
library(tidyverse)
library(raster)
library(terra)
library(leaflet)
library(sf)
library(fontawesome)
runApp()
runApp()
runApp()
?leaflet
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
scenlist <- list()
scenlist$burn_clim <- c(T,F)    # is burn frequency dependent on climate
scenlist$phi.a_burn <- c(T,F)   # does adult survival depend on burn frequency?
scenlist$phi.j_burn <- c(T,F)   # does juv survival depend on burn frequency?
#scenlist$cs_dep <- c(T,F)       # does climate effect on clutch size disappear at warmer latitudes TURNED OFF
#scenlist$pr_dep <- c(T,F)       # does climate effect on prob rep disappear at warmer latitudes TURNED OFF
scenlist$cs_dep <- c(F)       # does climate effect on clutch size disappear at warmer latitudes
scenlist$pr_dep <- c(F)
scenlist$cs_clim <- c(T,F)      # does clutch size change with climate change?
scenlist$pr_clim <- c(T,F)      # does rep prob depend on climate?
scenlist$hs_clim <- c(T,F)      # does hatch succ depend on climate
scenlist$pf_clim <- c(T,F)      # does sex ratio depend on climate
scenlist$ma_clim <- c(T,F)      # does age at maturity depend on temperature?
scenlist$phi.j_short <- c(T,F)  # does juv surv jump to adult surv at half of MA?
scenlist$phi_burn_half <-c(T,F) # should we use 1/2 the slope for ysb effect on adult and juvenile mortality?
scenlist$clim_scenario <- params$clim_scenarios
allscenarios <- do.call(expand.grid,scenlist)    # 4096 scenarios to start off...
scenlist$clim_scenario <- c(1:4)
allscenarios <- do.call(expand.grid,scenlist)    # 4096 scenarios to start off...
nrow(allscenarios)
# remove any scenarios with no climate effect but with latitude dependency  (2304 scenarios left)
allscenarios <- allscenarios[!((allscenarios$cs_dep&!allscenarios$cs_clim)|(allscenarios$pr_dep&!allscenarios$pr_clim)),]
nrow(allscenarios)
# remove any scenarios with no burn effect but an effect of burn on climate (1728 scenarios left)
allscenarios <- allscenarios[!(allscenarios$burn_clim&!(allscenarios$phi.j_burn)),]
nrow(allscenarios)
i
allscenarios <- do.call(expand.grid,scenlist)    # 4096 scenarios to start off...
nrow(allscenarios)
# remove any scenarios with no burn effect but an effect of burn on climate (3072 scenarios left)
allscenarios <- allscenarios[!(allscenarios$burn_clim&!(allscenarios$phi.j_burn)),]
nrow(allscenarios)
# subset(allscenarios,burn_clim==T & phi.j_burn==F) #okay it works
# remove scenarios with juv ysb eff but no adult ysb eff? (1152 scenarios left)
allscenarios <- allscenarios[!(!allscenarios$phi.a_burn&allscenarios$phi.j_burn),]
nrow(allscenarios)
#remove scenarios with half burn effect but no adult or juvenile burn effect (1008 scenarios left)
allscenarios <- allscenarios[!(allscenarios$phi_burn_half&!allscenarios$phi.j_burn&!allscenarios$phi.a_burn),]
nrow(allscenarios)
# subset(allscenarios,phi_burn_half==T & phi.j_burn==F & phi.a_burn==F) #okay it works...we have only adult, or both adult and juv
allscenarios$index<-1:nrow(allscenarios)
scenlist <- list()
scenlist$burn_clim <- c(T,F)    # is burn frequency dependent on climate
scenlist$phi.a_burn <- c(T,F)   # does adult survival depend on burn frequency?
scenlist$phi.j_burn <- c(T,F)   # does juv survival depend on burn frequency?
#scenlist$cs_dep <- c(T,F)       # does climate effect on clutch size disappear at warmer latitudes TURNED OFF
#scenlist$pr_dep <- c(T,F)       # does climate effect on prob rep disappear at warmer latitudes TURNED OFF
scenlist$cs_dep <- c(F)       # does climate effect on clutch size disappear at warmer latitudes
scenlist$pr_dep <- c(F)
scenlist$cs_clim <- c(T,F)      # does clutch size change with climate change?
scenlist$pr_clim <- c(T,F)      # does rep prob depend on climate?
scenlist$hs_clim <- c(T,F)      # does hatch succ depend on climate
scenlist$pf_clim <- c(T,F)      # does sex ratio depend on climate
scenlist$ma_clim <- c(T,F)      # does age at maturity depend on temperature?
scenlist$phi.j_short <- c(T,F)  # does juv surv jump to adult surv at half of MA?
scenlist$phi_burn_half <-c(T,F) # should we use 1/2 the slope for ysb effect on adult and juvenile mortality?
scenlist$clim_scenario <- c(1:8)
allscenarios <- do.call(expand.grid,scenlist)    # 4096 scenarios to start off...
nrow(allscenarios)
# remove any scenarios with no climate effect but with latitude dependency  (4096 scenarios left)
allscenarios <- allscenarios[!((allscenarios$cs_dep&!allscenarios$cs_clim)|(allscenarios$pr_dep&!allscenarios$pr_clim)),]
nrow(allscenarios)
# remove any scenarios with no burn effect but an effect of burn on climate (3072 scenarios left)
allscenarios <- allscenarios[!(allscenarios$burn_clim&!(allscenarios$phi.j_burn)),]
nrow(allscenarios)
# subset(allscenarios,burn_clim==T & phi.j_burn==F) #okay it works
# remove scenarios with juv ysb eff but no adult ysb eff? (1152 scenarios left)
allscenarios <- allscenarios[!(!allscenarios$phi.a_burn&allscenarios$phi.j_burn),]
nrow(allscenarios)
#remove scenarios with half burn effect but no adult or juvenile burn effect (1008 scenarios left)
allscenarios <- allscenarios[!(allscenarios$phi_burn_half&!allscenarios$phi.j_burn&!allscenarios$phi.a_burn),]
nrow(allscenarios)
shiny::runApp()
runApp()
# temp = dod_polygon()   # FOR DEBUG
# temp=user_polygon()   # FOR DEBUG!!
output$main_message <- renderText("")  # grey out the main_message text
showNotification("Processing scenario data (this can take over a minute)...",duration=150,id="startgo")
!all(file.exists(my_dl_list()))
if(!all(file.exists(my_dl_list()))){
showModal(modalDialog( #shows popup window for below message
title = "Careful!",
"Hey, you need to click the 'download' button to load the scenario files before running analyses!",
easyClose = TRUE,
footer = NULL
))
}
all(file.exists(my_dl_list()))
my_dl_list()
myReactives$numClicks
(myReactives$numClicks>0) & (myReactives$numClicks<4)
if((myReactives$numClicks>0) & (myReactives$numClicks<4)){
showModal(modalDialog( #shows popup window for below message
title = "Careful!",
"you need at least 4 vertices to make a valid ROI polygon. \n
If you want to run the analysis for a specific ROI, \n
please keep clicking on the map \n
until you have created a valid polygon object (at least 4 vertices). \n
If you intend to run a rangewide analysis \n
clear the ROI and then proceed. Clear the ROI if you don't want to \n
see this message.
",
easyClose = TRUE,
footer = NULL
))
removeNotification(id="startgo")
}
!is.null(myReactives$polygon)
if(!is.null(myReactives$polygon)){
check <- any(!is.na(terra::extract(myrasts()[[1]][[1]],thispoly())[,2]))
if(!check){
showModal(modalDialog( #shows popup window for below message
title = "Careful!",
"Your polygon does not intersect the Desert Tortoise range. Please \n
draw or load another polygon and try again!",
easyClose = TRUE,
footer = NULL
))
}
req(check)
}
temp <- poparray()   # run poparray
myReactives$compdf
poparray()
make_compdf(poparray(),scenndx())
myReactives$compdf <- rbind(myReactives$compdf,make_compdf(poparray(),scenndx()))
myReactives$compdf
comp_pick()
selected = comp_pick()
updateCheckboxGroupInput(session, "compare_scen",
choices = comp_pick(), selected = comp_pick())
removeNotification(id="startgo")
showNotification("Processing complete!")
output$main_message <- renderText("Processing complete!")
showNotification("Processing complete!")
showTab(inputId="mynavbar", target="Output Viewer") #"Compare"   # show tab when analyses are complete
comp_pick()
updateCheckboxGroupInput(session, "compare_scen",
choices = comp_pick(), selected = comp_pick())
runApp()
runApp()
runApp()
library(shiny)
library(shinythemes)
library(shinyBS)
library(shinyFeedback)
library(popbio)
library(tidyverse)
library(raster)
library(terra)
library(leaflet)
library(sf)
library(fontawesome)
# Load functions ---------------------
make_compdf <- function(parr,ndx){
temp <- apply(parr,c(1,2),sum)
tempdf <- as.data.frame(t(apply(temp,2,function(t) quantile(t,c(0.05,0.5,0.95)))))
tempdf[["scen"]] <- ndx
names(tempdf) <- c("lb","median","ub","scenario")
tempdf <- tempdf[,c("scenario","lb","median","ub")]
tempdf[['year']] <- 0:nyears
return(tempdf)
}
nreps=20
nyears=89
nages=3
r <- raster("www/habmap.tif")  # should be raster to interface well with leaflet- don't change to terra yet
nreps=20
nyears=89
nages=3
r <- raster("www/habmap.tif")  # should be raster to interface well with leaflet- don't change to terra yet
allscenarios<-readRDS("allscenarios_urls_A_and_B.rds") #use later for downloading data bundle
allscenarios$binscen <- sapply(1:nrow(allscenarios),function(t) paste(as.numeric(allscenarios[t,1:6]),collapse="") )
allscenarios_short <- allscenarios[,1:8]
allscenarios$index
class(allscenarios$index)
as.integer(allscenarios$index)
class(allscenarios$index)
class(as.integer(allscenarios$index))
allscenarios$index <- as.integer(allscenarios$index)
choicesnames <- names(allscenarios)[grepl("_clim",names(allscenarios))]
clim_activations <- data.frame(code=choicesnames)
clim_activations$fullnames <- c("Adult survival","Egg production","Probability of reproduction",
"Hatching success", "Sex ratio","Somatic growth")
choiceslist <- 1:nrow(clim_activations)
names(choiceslist) = clim_activations$fullnames
choiceslist=as.list(choiceslist)
dod_sites = st_read("www/DOD_SITESINRANGE.shp")
# head(dod_sites)
dodSiteList = dod_sites$SITE_NAME
#Text strings
instruction <- "To select a region of interest (ROI), you can \n (1) Draw a polygon to define the ROI on the map window to the right (one vertex generated per click), \n (2) Select a DoD installation from a preset list, or \n (3) upload a polygon from a shapefile (.shp)"
introtext <- "Conserving threatened and endangered species (TES) on Department of Defense (DoD) installations, without sacrificing vital military objectives, is necessarily a complex balancing act â€“ especially given the uncertainties and risks associated with climate change."
objectivetext <- "This project advances the concept of critical habitat breadth as the foundation for rigorous TES conservation planning and vulnerability assessment. Gopherus tortoises - particularly Desert Tortoise (G. agassizii) and Gopher Tortoise (G. polyphemus) -- provide an excellent model system for applying the concept of critical habitat breadth because their populations have been extensively studied, and many prior translocations have been conducted which enable investigation into the inherent ability to acclimate to novel environments)."
methodtext <- "We compiled and re-analyzed previously collected data from across the range of both species to assess how demographic vital rates (e.g., survival, fecundity, age-at-maturity) respond to spatiotemporal environmental and climatic gradients. In addition, we conducted nesting surveys in the field to investigate how hatching success and hatchling sex ratios respond to climate gradients. We integrated these statistical models into comprehensive, spatially explicit predictive models capable of forecasting annual range-wide population dynamics for both species. We used this simulation model to forecast and visualize population dynamics through the year 2099, and to predict when and where populations are likely to be self-sustaining. We used machine-learning methods to assess which environmental and climatic drivers were most influential for determining population sustainability."
resulttext <- "Our simulation results for Desert Tortoise indicated that range-wide population abundance appears to be relatively stable. However, the southeastern portion of the Desert Tortoise range appeared to be the most heavily (and negatively) impacted by climate change, whereas habitat regions in the northern part of the species range appeared to respond more favorably to anticipated changes in climate.. Precipitation fluctuations led to strong temporal variance in projected reproductive output and population abundance.
Our simulations indicated that most Gopher Tortoise populations appear to be declining, but that these declines may be driven more by low habitat quality rather than climate change per se. In particular, the observed decline in survival rate with years since fire strongly influenced population dynamics. Climate change, which is expected to reduce the frequency of prescribed fires across much of the southeastern United States, only exacerbated this effect in our simulations. Projected local extinction events in the Gopher Tortoise model tended to be most severe in the western and northern parts of the range, underscoring concerns about the status of Gopher Tortoise populations in this region.
"
benefittext <- "The results of our data collection linking climate to growth, reproduction, hatching success and sex ratio in both species will be directly beneficial to all future efforts to model climate effects on Gopherus populations.  Our range-wide viability analyses provide a tool to help resource managers to prioritize conservation efforts in regions with projected climate resiliency, to identify potential future translocation sites outside of DoD lands that will remain suitable as habitat for many decades into the future, and to direct resources toward ameliorating the most damaging effects of climate change, including the reduced potential for critical habitat management (e.g. prescribed fire). A decision support tool is currently in development to enable more effective information transfer to land managers. However, harnessing the value of this tool for management will require additional consultations and demonstrations with key stakeholders."
runApp()
runApp()
temp <- poparray()   # run poparray
poparray()
max(sapply(1:nreps,function(t) max(poparray()[t,,]/1000) ))*1.2
maxabund <- max(sapply(1:nreps,function(t) max(poparray()[t,,]/1000) ))*1.2
dim(poparray())
(nyears+1)
y=1
poparray()[,y,]
y=1
dat <- poparray()[,y,]
nages
apply(dat,2,median)
apply(dat,2,function(t) quantile(t,0.05))
this = data.frame(
year= rep(2010+y,nages),
age=c("Hatchling","Juvenile","Adult"),
abund = apply(dat,2,median),
lb = apply(dat,2,function(t) quantile(t,0.05)),
ub = apply(dat,2,function(t) quantile(t,0.95))
)
this
df <- NULL
# y=1
for(y in 1:(nyears+1)){
dat <- poparray()[,y,]
this = data.frame(
year= rep(2010+y,nages),
age=c("Hatchling","Juvenile","Adult"),
abund = apply(dat,2,median),
lb = apply(dat,2,function(t) quantile(t,0.05)),
ub = apply(dat,2,function(t) quantile(t,0.95))
)
df <- rbind(df,this)
}
df
poparray()[,y,]
df
df <- NULL
# y=1
for(y in 1:(nyears+1)){
dat <- poparray()[,y,]
this = data.frame(
year= rep(2010+y,nages),
age=c("Hatchling","Juvenile","Adult"),
abund = apply(dat,2,median),
lb = apply(dat,2,function(t) quantile(t,0.05)),
ub = apply(dat,2,function(t) quantile(t,0.95))
)
df <- rbind(df,this)
}
df
y=1
nyears
(nyears+1)
1:(nyears+1)
y=2
dat <- poparray()[,y,]
this = data.frame(
year= rep(2010+y,nages),
age=c("Hatchling","Juvenile","Adult"),
abund = apply(dat,2,median),
lb = apply(dat,2,function(t) quantile(t,0.05)),
ub = apply(dat,2,function(t) quantile(t,0.95))
)
this
df <- rbind(df,this)
df
req(poparray())
df <- NULL
# y=2
for(y in 1:(nyears+1)){
dat <- poparray()[,y,]
this = data.frame(
year= rep(2010+y,nages),
age=c("Hatchling","Juvenile","Adult"),
abund = apply(dat,2,median),
lb = apply(dat,2,function(t) quantile(t,0.05)),
ub = apply(dat,2,function(t) quantile(t,0.95))
)
df <- rbind(df,this)
}
df
agedf <- reactive({
req(poparray())
df <- NULL
# y=2
for(y in 1:(nyears+1)){
dat <- poparray()[,y,]
this = data.frame(
year= rep(2010+y,nages),
age=c("Hatchling","Juvenile","Adult"),
abund = apply(dat,2,median),
lb = apply(dat,2,function(t) quantile(t,0.05)),
ub = apply(dat,2,function(t) quantile(t,0.95))
)
df <- rbind(df,this)
}
return(df)
})
df <- agedf()
df
View(df)
agedf <- reactive({
req(poparray())
df <- NULL
# y=2
for(y in 1:(nyears+1)){
dat <- poparray()[,y,]/1000
this = data.frame(
year= rep(2010+y,nages),
age=c("Hatchling","Juvenile","Adult"),
abund = apply(dat,2,median),
lb = apply(dat,2,function(t) quantile(t,0.05)),
ub = apply(dat,2,function(t) quantile(t,0.95))
)
df <- rbind(df,this)
}
return(df)
})
df <- agedf()
y=2
poparray()[,y,]
poparray()[,y,]/1000
agedf <- reactive({
req(poparray())
df <- NULL
# y=2
for(y in 1:(nyears+1)){
dat <- poparray()[,y,]/1000
this = data.frame(
year= rep(2010+y,nages),
age=c("Hatchling","Juvenile","Adult"),
abund = apply(dat,2,median),
lb = apply(dat,2,function(t) quantile(t,0.05)),
ub = apply(dat,2,function(t) quantile(t,0.95))
)
df <- rbind(df,this)
}
return(df)
})
agedf()
df <- agedf()
View(df)
gplot(df,aes(year,abund,col=age)) +
geom_ribbon(aes(ymin=lb,ymax=ub,fill=age),alpha=0.4)
ggplot(df,aes(year,abund,col=age)) +
geom_ribbon(aes(ymin=lb,ymax=ub,fill=age),alpha=0.4)
ggplot(df,aes(year,abund,col=age)) +
geom_ribbon(aes(ymin=lb,ymax=ub,fill=age),alpha=0.4) +
geom_path(lwd=2)
ggplot(df,aes(year,abund,col=age)) +
geom_ribbon(aes(ymin=lb,ymax=ub,fill=age),alpha=0.4) +
geom_path(lwd=1.5)
makeagedf <- function(parr){
df <- NULL
# y=2
for(y in 1:(nyears+1)){
dat <- parr[,y,]/1000
this = data.frame(
year= rep(2010+y,nages),
age=c("Hatchling","Juvenile","Adult"),
abund = apply(dat,2,median),
lb = apply(dat,2,function(t) quantile(t,0.05)),
ub = apply(dat,2,function(t) quantile(t,0.95))
)
df <- rbind(df,this)
}
return(df)
}
df <- makeagedf(poparray())
agedf <- reactive({
req(poparray())
df <- makeagedf(poparray())
return(df)
})
agedf_clipped <- reactive({
req(poparray_clipped())
df <- makeagedf(poparray_clipped())
return(df)
})
runApp()
thisyear=10
thisquant = 0.5
myrasts()[[1]][[1]]
(thisyear*nages+1)
((thisyear-1)*nages+1)
((thisyear-1)*nages+1):(thisyear*nages)
thisyear=0
thisyear=0
(thisyear*nages+1):((thisyear+1)*nages)
thiyear=2
(thisyear*nages+1):((thisyear+1)*nages)
thisyear
thisyear=2
(thisyear*nages+1):((thisyear+1)*nages)
thisyear=1
(thisyear*nages+1):((thisyear+1)*nages)
thisyear=2
(thisyear*nages+1):((thisyear+1)*nages)
thisyear=3
(thisyear*nages+1):((thisyear+1)*nages)
myrasts()[[1]][[ndx]]
myrasts()[[1]][[ndx[1]]]
ndx <- (thisyear*nages+1):((thisyear+1)*nages)
ndx
myrasts()[[1]][[ndx[1]]]
myrasts()[[1]][[ndx]]
sum(myrasts()[[1]][[ndx]])
summary(myrasts()[[1]][[ndx]])
sum(myrasts()[[1]][[ndx]])
lapply(1:nreps, function(t) sum(myrasts()[[1]][[ndx]]) )
do.call("c",lapply(1:nreps, function(t) sum(myrasts()[[1]][[ndx]]) ) )
thismap <- do.call("c",lapply(1:nreps, function(t) sum(myrasts()[[t]][[ndx]]) ) )
quantile(thismap,thisquant)
qmap <- quantile(thismap,thisquant)
plot(qmap)
global(thismap,"max")
global(thismap,"max",na.rm=T)
max(global(thismap,"max",na.rm=T))
globalmax <- max(global(thismap,"max",na.rm=T))
qmap <- quantile(thismap,thisquant)
plot(qmap,range=c(0,globalmax) )
yrasts_clipped()
myrasts_clipped()
thisyear <- as.numeric(input$map_year)
thisquant <- as.numeric(input$map_percentile)/100
ndx <- (thisyear*nages+1):((thisyear+1)*nages)
thisyear=5
thisquant=0.5
ndx <- (thisyear*nages+1):((thisyear+1)*nages)
ndx
is.null(myReactives$polygon)
thismap <- do.call("c",lapply(1:nreps, function(t) sum(myrasts_clipped()[[t]][[ndx]]) ) )
globalmax <- max(global(thismap,"max",na.rm=T))
qmap <- quantile(thismap,thisquant)
plot(qmap,range=c(0,globalmax) )
qmap <- trim(qmap)
plot(qmap,range=c(0,globalmax) )
runApp()
runApp()
shiny::runApp()
?strong
runApp()
runApp()
?p
p(": Model-based Insights into Tortoise Critical Habitat under CLIMate change")
titlePanel(strong("MITCHCLIM 0.1"),p(": Model-based Insights into Tortoise Critical Habitat under CLIMate change"))
titlePanel(strong("MITCHCLIM 0.1"),
p(": Model-based Insights into Tortoise Critical Habitat under CLIMate change"))
?titlePanel
titlePanel(h2("MITCHCLIM 0.1"),
h4(": Model-based Insights into Tortoise Critical Habitat under CLIMate change"))
titlePanel(h2("MITCHCLIM 0.1",
h4(": Model-based Insights into Tortoise Critical Habitat under CLIMate change")))
runApp()
?i
i("hi")
titlePanel(h2("MITCHCLIM 0.1",
tags$i( h4("Model-based Insights into Tortoise Critical Habitat under CLIMate change"))))
runApp()
citation("raster")
citation("terra")
citation("shiny")
shiny::runApp()
library(shiny)
library(shinythemes)
library(shinyBS)
library(shinyFeedback)
library(popbio)
library(tidyverse)
library(raster)
library(terra)
library(leaflet)
library(sf)
library(fontawesome)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
#install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='kjloope', token='4955215D717CCE64B71D8D3ACAC32C6E', secret='2L/dNnhiOSnVrokOdSzCLcDk35T7h4BkVDtLQwWs')
rsconnect::deployApp('/Users/kevinloope/Dropbox/GopherTortoise/Analysis/PVA_DT/Shiny/DTapp_8reps')
rsconnect::deployApp('/Users/kevinloope/Dropbox/GopherTortoise/Analysis/PVA_DT/Shiny/DTapp_8reps')
rsconnect::deployApp('/Users/kevinloope/Dropbox/GopherTortoise/Analysis/PVA_DT/Shiny/DTapp_8reps')
rsconnect::deployApp('/Users/kevinloope/Dropbox/GopherTortoise/Analysis/PVA_DT/Shiny/DTapp_4reps')
